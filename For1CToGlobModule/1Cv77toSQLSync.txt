                                                                                                                                                                  //=================================================
//фин. модуль
// модуль финансового обмена
// расшифровываем справочники
Процедура РасшифровкаСправочников(param2) Экспорт
	НомСправ = 0;
    ВсегоСправочников         = Метаданные.Справочник();
	Сч = 0;
	Пока Сч < ВсегоСправочников Цикл
		 Сч = Сч+1;
	   Если param2 =  Метаданные.Справочник(Сч).Идентификатор Тогда
		    НомСправ = Сч;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		колвоРеквизитов =         метаданные.Справочник(НомСправ).Реквизит();  // получаем количество реквизитов
	Исключение
		колвоРеквизитов = 0;
	КонецПопытки;
	
	ВСтроку= "+++ " + метаданные.Справочник(НомСправ).Идентификатор + " + $; Наименование $; Код $; ";
	Если Метаданные.Справочник(НомСправ).КоличествоУровней >1 Тогда
		ВСтроку = ВСтроку + "Родитель $; " + " ссылкаРодитель $; ";
	КонецЕсли;
	
	Сч = 0;
	Пока (Сч < колвоРеквизитов) Цикл
		Сч = Сч+1;
		РеквизитыСправочника =  РеквизитыСправочника  +  метаданные.Справочник(НомСправ).Реквизит(Сч).Идентификатор+ " $; ";
    	Если СокрЛП(метаданные.Справочник(НомСправ).Реквизит(Сч).Тип) = "Справочник"   Тогда
				РеквизитыСправочника = РеквизитыСправочника + "Ссылка" + метаданные.Справочник(НомСправ).Реквизит(Сч).Идентификатор + " $; ";
		КонецЕсли;
		СтроковоеЗначение =         РеквизитыСправочника;         
	КонецЦикла;
	ВСтроку = Встроку + СтроковоеЗначение;
	
	//Указываем группу
	ВСтроку = Встроку + " ЭтоГруппа $; "; 
	СпискиСправочников = ВСтроку;
	
КонецПроцедуры
//========================================================
// составляем запрос
Процедура СоставитьЗапросСправочника(ПеременнаяЗапроса, колвоРеквизитов, Справочник, ТЗРеквизитов, НомерРеквизита, param2) Экспорт
       НомСправ = 0;
       ВсегоСправочников         = Метаданные.Справочник();
       Сч = 0;
       Пока Сч < ВсегоСправочников Цикл
            Сч = Сч+1;
             Если param2 =  Метаданные.Справочник(Сч).Идентификатор Тогда
                  НомСправ = Сч;
                      Прервать;
               КонецЕсли;
       КонецЦикла;

       Сч = 0;
       Пока (Сч < колвоРеквизитов) Цикл
       Сч = Сч+1;
       РеквизитыСправочника                 = Метаданные.Справочник(НомСправ).Реквизит(Сч).Идентификатор;
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизит                 = РеквизитыСправочника;
	   ТЗРеквизитов.Тип						= Метаданные.Справочник(НомСправ).Реквизит(Сч).Тип;
       ТЗРеквизитов.НомерРеквизита = НомерРеквизита;
       //ПеременнаяЗапроса                         = ПеременнаяЗапроса + РазделительСтрок+ РеквизитыСправочника + " = " + "Справочник."+Справочник+"."+РеквизитыСправочника + ";";

       КонецЦикла;
КонецПроцедуры
///////////////////////////////////////////////////////////
// получаем данные справочника
   Процедура данныеСправочников(param2, param5, param6)  Экспорт
	Перем Запрос, ТекстЗапроса, Таб, НомСправ;
	
	НачСтрока = Число(param5);
	КонСтрока = Число(param6);
	
	
	КонечныеДанныеСправочника = ""; // в эту переменную выводим итоговое значение;
	
	ВсегоСправочников         = Метаданные.Справочник();
	Сч = 0;
	Пока Сч < ВсегоСправочников Цикл
		Сч = Сч+1;
		
		Если param2 =  Метаданные.Справочник(Сч).Идентификатор Тогда
			
			НомСправ = Сч;
			Прервать;
		КонецЕсли;
	КонецЦикла;        
	
	Попытка
		
		колвоРеквизитов                         = метаданные.Справочник(НомСправ).Реквизит();  // получаем количество реквизитов
	Исключение
		колвоРеквизитов                         = 0;
	КонецПопытки;
	Справочник                                         = Метаданные.Справочник(НомСправ).Идентификатор;
	ПеременнаяЗапроса                         = "";
	
	
	
	ТЗРеквизитов                              = СоздатьОбъект("ТаблицаЗначений");
	ТЗРеквизитов.ВставитьКолонку("Реквизит");
	ТЗРеквизитов.ВставитьКолонку("НомерРеквизита");
	ТЗРеквизитов.ВставитьКолонку("Тип");
	
	ТЗСправочников = СоздатьОбъект("ТаблицаЗначений");
	ТЗСправочников.ВставитьКолонку("Объект");
	
	
	
	ПеременнаяЗапроса                     = ПеременнаяЗапроса + РазделительСтрок+ Справочник  + " = " + "Справочник."+Справочник+".ТекущийЭлемент;";
	ТЗРеквизитов.НоваяСтрока();
	ТЗРеквизитов.Реквизит                 = Справочник;
	ПеременнаяЗапроса                     = ПеременнаяЗапроса + РазделительСтрок+ "Код "       + " = " + "Справочник."+Справочник+".ТекущийЭлемент.Код;";
	ТЗРеквизитов.НоваяСтрока();
	ТЗРеквизитов.Реквизит                 =  "Код";
	ТЗРеквизитов.Тип						 =  "Строка";
	// Если есть группы Тогда включаем группы в запрос
	НомерРеквизита                        = 3;
	Если Метаданные.Справочник(НомСправ).КоличествоУровней >1 Тогда
		ПеременнаяЗапроса             = ПеременнаяЗапроса + РазделительСтрок+ "Родитель"         + " = " + "Справочник."+Справочник+".Родитель;";
		НомерРеквизита                = НомерРеквизита + 1;
		ТЗРеквизитов.НоваяСтрока();
		ТЗРеквизитов.Реквизит         = "Родитель";
		ТЗРеквизитов.Тип				 = "Справочник";
		
	КонецЕсли;
	
	// создаем список реквизитов справочника
	СоставитьЗапросСправочника (ПеременнаяЗапроса, колвоРеквизитов, Справочник, ТЗРеквизитов, НомерРеквизита, param2);
	ПеременнаяЗапроса                 = ПеременнаяЗапроса + РазделительСтрок+"Группировка "
	+Справочник+" упорядочить по "+Справочник+".ТекущийЭлемент;";
	
	
	
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса = 
	"//{{ЗАПРОС(Справочники)
	|Обрабатывать НеПомеченныеНаУдаление;" 
	+ ПеременнаяЗапроса; 
	
	
	
	
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	//  Запрос.Выгрузить(ТЗСправочников);
	
	Состояние("Идет Выборка данных ...");
	//ТЗЗапроса = СоздатьОбъект("ТаблицаЗначений");
	
	Сч5 = НачСтрока;
	ТЗЗапроса = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ТЗЗапроса);
	
	// проверка на сумму строк. 
	КолвоСтрок = ТЗЗапроса.КоличествоСтрок();
	Если  (КонСтрока ) > КолвоСтрок Тогда
		КонСтрока =  КолвоСтрок;
	КонецЕсли;
	
	Для а = НачСтрока По КонСтрока Цикл
	//Пока Запрос.Группировка(1) = 1 Цикл
		
		
		ТЗСправочников.НоваяСтрока();
		//ТЗЗапроса.ПолучитьСтрокуПоНомеру(Сч);
		ТЗСправочников.Объект = ТЗЗапроса.ПолучитьЗначение(а,Справочник);
	Сч5 = Сч5+1;
	КонецЦикла;
	Сч1 = 0;  	
	ТЗСправочников.ВыбратьСтроки();
	Пока ТЗСправочников.ПолучитьСтроку() = 1 Цикл  
		
		Сч1 = Сч1 +1;
		Если Сч1 <> 1 Тогда
			КонечныеДанныеСправочника = КонечныеДанныеСправочника +  " #| "; 
		КонецЕсли;
		
		
		// в цикле получаем атрибуты запроса
		ТЗРеквизитов.ВыбратьСтроки();
		Пока         ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
			Если ТЗРеквизитов.НомерСтроки =0 тогда 
				Продолжить;
			КонецЕсли;
			
			Если   СокрЛП(ТЗРеквизитов.Реквизит) = "Должность" Тогда
				ф=0;
			КонецЕсли;   	
			
			Если (ТЗСправочников.Объект.ЭтоГруппа() = 1)  И  (ТЗРеквизитов.Реквизит = "Код") Тогда    
				КонечныеДанныеСправочника         = КонечныеДанныеСправочника +    СокрЛП(ТЗСправочников.Объект.Код) + " $; ";
			ИначеЕсли (ТЗСправочников.Объект.ЭтоГруппа() = 1)  И  (ТЗРеквизитов.Реквизит = "Родитель") Тогда
				КонечныеДанныеСправочника         = КонечныеДанныеСправочника +    СокрЛП(ТЗСправочников.Объект.Родитель) + " $; ";
			ИначеЕсли ТЗРеквизитов.Реквизит = Справочник Тогда
				
				КонечныеДанныеСправочника         = КонечныеДанныеСправочника +    СокрЛП(ТЗСправочников.Объект) + " $; "; 
			Иначе
				Если СокрЛП(ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) = "НеизвестныйОбъект" Тогда
					Если ТЗРеквизитов.Тип = "Справочник" тогда 
						КонечныеДанныеСправочника         = КонечныеДанныеСправочника +	" $; $; "; //кидаем пустую ссылку если переодический
					Иначе
						КонечныеДанныеСправочника         = КонечныеДанныеСправочника +	" $; " ;
					КонецЕсли;
				Иначе
					
					//Если ТЗРеквизитов.Тип = "Строка" Тогда
					//ГотСтр = УбратьПереносСтроки(СокрЛП(ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)));
					//КонечныеДанныеСправочника = КонечныеДанныеСправочника + ГотСтр + " $; " ;
					//Иначе
					//КонечныеДанныеСправочника         = КонечныеДанныеСправочника   +  СокрЛП(ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) + " $; ";        
					//КонецЕсли;
					КонечныеДанныеСправочника         = КонечныеДанныеСправочника   +  СокрЛП(ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) + " $; "; 
				КонецЕсли;
			КонецЕсли;
			// Если поле справочник, даем ему код
			
			Если ТЗРеквизитов.Реквизит = Справочник Тогда					   		
				Продолжить;
			КонецЕсли;
			Если (ТипЗначения(ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) = 11)  Тогда
				
				Попытка	
					КонечныеДанныеСправочника         = КонечныеДанныеСправочника  +  ТЗСправочников.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит).Код + " $; ";  
				Исключение
					КонечныеДанныеСправочника         = КонечныеДанныеСправочника  + " $; ";
				КонецПопытки;
				
			КонецЕсли;
			
			
			
		КонецЦикла;     
		//Указываем группу
		КонечныеДанныеСправочника = КонечныеДанныеСправочника +  ТЗСправочников.Объект.ЭтоГруппа()+ " $; ";// указавыем, что это папка 
		
		//   КонечныеДанныеСправочника = КонечныеДанныеСправочника + " #| ";// Симв(13) + Симв(10); // добавляем разделитель строки
		
	КонецЦикла;        
	
	СпискиСправочников = КонечныеДанныеСправочника;
	
	
КонецПроцедуры // получаем данные справочника

// возврат для финансового анализа
//============================================
Процедура СписокСправочников() Экспорт        
      СпискиСправочников = "";
      ВсегоСправочников         = Метаданные.Справочник(); 
 
       Сч = 0;
       Пока Сч < ВсегоСправочников Цикл
	   	Если Сч <> 0 Тогда
	   	 СпискиСправочников = СпискиСправочников      +   "#|";	
	   	КонецЕсли;
	    Сч = Сч+1;        
        СпискиСправочников = СпискиСправочников + Метаданные.Справочник(Сч).Идентификатор   ;
               
        КонецЦикла;
КонецПроцедуры
//===========================================        

Процедура СписокДокументов ();
       СпискиСправочников = "";
       ВсегоДокументов = Метаданные.Документ();
       Сч = 0;
       Пока Сч < ВсегоДокументов Цикл
	   	Если Сч <> 0 Тогда
	   	 СпискиСправочников = СпискиСправочников      +   "#|";	
	   	КонецЕсли;
	   	       Сч = Сч + 1;
               СпискиСправочников = СпискиСправочников + Метаданные.Документ(Сч).Идентификатор;
        КонецЦикла;
        
КонецПроцедуры
//===========================================
  Процедура РасшифровкаДокументов(Param2)
       НомДок = 0;
       // вычисляем номер документа в метаданных
       ВсегоДокументов         = Метаданные.Документ();
       Сч = 0;
       Пока Сч < ВсегоДокументов Цикл
               Сч = Сч+1;
              Если param2 =  Метаданные.Документ(Сч).Идентификатор Тогда
                   НомДок = Сч;
                   Прервать;
               КонецЕсли;
       КонецЦикла;
       //метаданные.Справочник(1);//получаем конкретный справочник
       Попытка
               колвоРеквизитовШапки =         метаданные.Документ(НомДок).РеквизитШапки();  // получаем количество реквизитов шапки
       Исключение
               колвоРеквизитовШапки = 0;
       КонецПопытки;
       
       Попытка 
               колвоРеквизитовТабл = метаданные.Документ(НомДок).РеквизитТабличнойЧасти();// получаем количество реквизитов таблицы
       Исключение
               колвоРеквизитовТабл = 0;
       КонецПопытки;
       
       // Указываем постоянные реквизиты;
       Если метаданные.Документ(НомДок).ТипНомера = "Числовой" Тогда
               ТипНомера = " Число @ НомерДок $; "; 
       Иначе
               ТипНомера = " Строка @ НомерДок $; ";
       КонецЕсли;
       
       Встроку = "+++ " + метаданные.Документ(НомДок).Идентификатор + " $$$Шапка: $;" + ТипНомера + " Дата @ ДатаДок ";
       
       // получим реквизиты шапки
       Сч = 0;
       Пока (Сч < колвоРеквизитовШапки) Цикл
               Сч = Сч+1;
               РеквизитыШапк = " $;Тип " + метаданные.Документ(НомДок).РеквизитШапки(Сч).Тип + " @Вид " +метаданные.Документ(НомДок).РеквизитШапки(Сч).Вид + " @инд "+метаданные.Документ(НомДок).РеквизитШапки(Сч).Идентификатор;
			   Если  (метаданные.Документ(НомДок).РеквизитШапки(Сч).Тип = "Справочник")
			   или ((метаданные.Документ(НомДок).РеквизитШапки(Сч).Тип = "Неопределенный") 
			   И  (Лев(метаданные.Документ(НомДок).РеквизитШапки(Сч).Идентификатор,6)="Субкон"))Тогда
			     РеквизитыШапк = РеквизитыШапк + " $;Тип Ссылка " + " @Вид " +метаданные.Документ(НомДок).РеквизитШапки(Сч).Вид +  " @инд Ссылка" + метаданные.Документ(НомДок).РеквизитШапки(Сч).Идентификатор;
			   	КонецЕсли;
               СтроковоеЗначение =         РеквизитыШапк;        
               ВСтроку = Встроку + СтроковоеЗначение;
               
       КонецЦикла;
       // получим реквизиты Таблици
       Сч = 0;
       РеквизитыТабл = "";        
       РеквизитыТабл = РеквизитыТабл + " $$$Табл: ";
       Пока Сч < колвоРеквизитовТабл Цикл
               Сч = Сч + 1;
       РеквизитыТабл =  РеквизитыТабл + " $;Тип " + метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Тип + " @Вид " 
       +метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Вид + 
               " @инд " +        метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Идентификатор;
			   Если (метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Тип = "Справочник")
			   или ((метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Тип = "Неопределенный") 
			   И  (Лев(метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Идентификатор,6)="Субкон"))  Тогда
			  РеквизитыТабл = 	РеквизитыТабл +  " $;Тип " + метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Тип + " @Вид " 
               +метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Вид + 
               " @инд Ссылка" + метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Идентификатор;
			   КонецЕсли;
                    
       КонецЦикла;
       СтроковоеЗначение =     РеквизитыТабл;        
       ВСтроку = Встроку + СтроковоеЗначение;
       СпискиСправочников = ВСтроку;
КонецПроцедуры

// генератор параметров запроса
Процедура СоздатьЗапросДокументов(param2, НомДок, Документ, ТЗРеквизитов, ПеременнаяЗапроса)
       
       // получаем данные запрос реквизитов шапки
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизиты = "НомерДок";
       ТЗРеквизитов.НоваяСтрока();
	   ТЗРеквизитов.Тип		  = "Строка";
       ТЗРеквизитов.Реквизиты = Документ;
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизиты = "ДатаДок";
	   ТЗРеквизитов.Тип		  = "Дата";
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизиты = "НомерСтроки";
	   ТЗРеквизитов.Тип		  = "Строка";
       Сч = 0;
       Пока Сч < метаданные.Документ(НомДок).РеквизитШапки() Цикл 
         Сч = Сч + 1;
         НовРеквизит = метаданные.Документ(НомДок).РеквизитШапки(Сч).Идентификатор;
         ТЗРеквизитов.НоваяСтрока();
         ТЗРеквизитов.Реквизиты = НовРеквизит; 
		 ТЗРеквизитов.Тип		= метаданные.Документ(НомДок).РеквизитШапки(Сч).Тип;
       //ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + НовРеквизит + " = Документ." + Документ + "." + НовРеквизит + ";";
       КонецЦикла;
       
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизиты = "Таблица";
       Сч = 0;
       Пока Сч < метаданные.Документ(НомДок).РеквизитТабличнойЧасти() Цикл 
       Сч = Сч + 1;
       НовРеквизитТабл = метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Идентификатор;
       ТЗРеквизитов.НоваяСтрока();
       ТЗРеквизитов.Реквизиты = НовРеквизитТабл;
	   ТЗРеквизитов.Тип		= метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Тип;
       ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок  + НовРеквизитТабл + " = Документ." + Документ + "." + НовРеквизитТабл + ";";
         
       КонецЦикла;
 
КонецПроцедуры
///////////////////////////////////////////////////////////
// получим данные документа

                   Процедура ДанныеДокумента (param2, ДатаНач, ДатаКон)
		
       НомДок = 0;
       // вычисляем номер документа в метаданных
       ВсегоДокументов         = Метаданные.Документ();
       Сч = 0;
       Пока Сч < ВсегоДокументов Цикл
               Сч = Сч+1;
               
               Если СокрЛП(param2) =  Метаданные.Документ(Сч).Идентификатор Тогда
               Документ =         Метаданные.Документ(Сч).Идентификатор;
                       НомДок = Сч;
                       Прервать;
               КонецЕсли;
       КонецЦикла;
       
       ТЗРеквизитов = СоздатьОбъект("ТаблицаЗначений");
       ТЗРеквизитов.ВставитьКолонку("Реквизиты");
	   ТЗРеквизитов.ВставитьКолонку("Тип");

       ПеременнаяЗапроса = "";
       ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + param2 + " = Документ." + param2 + ".ТекущийДокумент;";
       ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + "НомерДок = Документ." + param2 + ".НомерДок;";
       ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + "ДатаДок = Документ." + param2 + ".ДатаДок;";
       //ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + "НомерСтроки = Документ." + param2 + ".НомерСтроки
       //|;";
       СоздатьЗапросДокументов(param2, НомДок, Документ, ТЗРеквизитов, ПеременнаяЗапроса);
       ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + "Группировка " + Документ + " Упорядочить по " + Документ + ".ТекущийДокумент;";
       //ПеременнаяЗапроса = ПеременнаяЗапроса + РазделительСтрок + "Группировка НомерСтроки;";
       
       
       
       
       
       Запрос = СоздатьОбъект("Запрос");
       ТекстЗапроса = 
       "//{{ЗАПРОС(Сформировать)
       |Период с ( ДатаНач) по (ДатаКон);"
       + ПеременнаяЗапроса;
       //Сообщить(ТекстЗапроса);
       Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
               Возврат;
       КонецЕсли;
       РезультатЗапросаДок = "";
       сч1 = 0;
	   Сч5 = 0;
       Пока Запрос.Группировка(1) = 1 Цикл // запрашиваем документы в цикле
	   	Сч1 = Сч1 + 1;
	   	Если сч1 = 1 Тогда
	   		РезультатЗапросаДок = РезультатЗапросаДок + " $$$Шапка:"; 
	   	Иначе 
	   		РезультатЗапросаДок = РезультатЗапросаДок + "#| $$$Шапка:"; 
	   	КонецЕсли;
               
               ТЗРеквизитов.ВыбратьСтроки();
               Счетчик = 0;
               Пока         ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
                       Счетчик = Счетчик + 1;        
                       Если ТЗРеквизитов.Реквизиты = "Таблица" Тогда
                               РезультатЗапросаДок = РезультатЗапросаДок + "#| $$$ТаблЧасть: ";
                               Прервать;
                       КонецЕсли;
                       ВидРеквизита = ТЗРеквизитов.Реквизиты;
                       Если ВидРеквизита = param2 Тогда 
                               ВидРеквизита = "Документ";
                       КонецЕсли;
                       //АтрибутЗапроса = param2+"."+ТЗРеквизитов.Реквизиты;
                       Док = СоздатьОбъект("Документ."+param2);
                       ЭтотДок = Док.НайтиДокумент(Запрос.ПолучитьАтрибут(Param2));
                       попытка
                       РезультатЗапросаДок = РезультатЗапросаДок + " $; " + ВидРеквизита + " $$ " + СокрЛП(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты));
                       Если (ТЗРеквизитов.Тип = "Справочник") Или (ТипЗначения(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты)) = 11) ИЛИ (Лев(ТЗРеквизитов.Реквизиты,6)="Субкон")  тогда //ТипЗначения(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты))  = 11 Тогда
                             Если (Лев(ТЗРеквизитов.Реквизиты,5)="Заказ") И (Param2 = "БанковскаяВыписка") Тогда
							 	Продолжить; КонецЕсли;
					   	
					   	Попытка
                                       РезультатЗапросаДок = РезультатЗапросаДок + " $; Ссылка"  + ТЗРеквизитов.Реквизиты + " $$ " + СокрЛП(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты).Код);        
                               Исключение
                                       РезультатЗапросаДок = РезультатЗапросаДок + " $; Ссылка"  + ТЗРеквизитов.Реквизиты + " $$ ";
                               КонецПопытки;
                       КонецЕсли
               Исключение
               КонецПопытки;
       КонецЦикла;   
       // РезультатЗапросаДок = РезультатЗапросаДок + " #| ";   // fix1
               // вытаскиваем таблЧасть
               Док.ВыбратьСтроки();
               Пока док.ПолучитьСтроку()=1 Цикл
                       Сч = 0;
                       ТЗРеквизитов.ВыбратьСтроки();
                       Счетчик = 0;
                       
                       Пока         ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
                               Счетчик = Счетчик + 1;        
                               Если ТЗРеквизитов.Реквизиты = "Таблица" Тогда
                                       Сч = 1;
                               КонецЕсли;
                               
                               Если (Сч = 1) И (ТЗРеквизитов.Реквизиты <> "Таблица") Тогда
                                       
                                       РезультатЗапросаДок = РезультатЗапросаДок + " $; " + ТЗРеквизитов.Реквизиты + " $$ "+ СокрЛП(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты));
                                       Если (ТЗРеквизитов.Тип = "Справочник") Или (ТипЗначения(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты)) = 11) ИЛИ (Лев(ТЗРеквизитов.Реквизиты,6)="Субкон") тогда // ТипЗначения(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты))  = 11 Тогда
                                 Если (Лев(ТЗРеквизитов.Реквизиты,5)="Заказ") И (Param2 = "БанковскаяВыписка") Тогда
							 	Продолжить; КонецЕсли;
									   	
									   	Попытка
                                       РезультатЗапросаДок = РезультатЗапросаДок + " $; Ссылка"  + ТЗРеквизитов.Реквизиты + " $$ " + СокрЛП(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты).Код);        
                               Исключение
                                       РезультатЗапросаДок = РезультатЗапросаДок + " $; Ссылка"  + ТЗРеквизитов.Реквизиты + " $$ ";
                               КонецПопытки;        
                                       КонецЕсли;
                                       
                               КонецЕсли;
                       КонецЦикла;
            РезультатЗапросаДок = РезультатЗапросаДок + " #| ";   // fix1
               КонецЦикла;        
       
		КонецЦикла;   
		
		Длина =  СтрДлина(РезультатЗапросаДок);
		
		Если Прав(РезультатЗапросаДок,17) = "#| $$$ТаблЧасть: " тогда
		Иначе 
			РезультатЗапросаДок = Лев(РезультатЗапросаДок, (Длина-3));
		КонецЕсли;  
		
		СпискиСправочников = РезультатЗапросаДок;
       
       

КонецПроцедуры 

//16.05.2012 // документы/справочники из лога
////////////////////////////////////////////////////////////
Функция вед0(ч)
    Если ч<10 Тогда
        Возврат "0"+ч;
    Иначе 
        Возврат ""+ч;
    КонецЕсли;
КонецФункции
////////////////////////////////////////////////////////////
Функция СтрокаВДату(прм_стр)
    гг=0+Лев(прм_стр,4);
    мм=0+Сред(прм_стр,5,2);
    дд=0+Сред(прм_стр,7,2);
    Возврат Дата(гг,мм,дд);
КонецФункции
////////////////////////////////////////////////////////////
Функция ОбъектПоСтроке(прм_стр)
//Возвращает ссылку на объект (например, документ или справочник) 
//по строке вида O/7549/2093806
    
    стр=""""+СтрЗаменить(прм_стр,"/", """,""")+"""";
    сп=СоздатьОбъект("СписокЗначений");
    сп.ИзСтрокиСРазделителями(стр);
      Попытка
            
    Вид=сп.ПолучитьЗначение(1);
    Тип=сп.ПолучитьЗначение(2);
    Код=сп.ПолучитьЗначение(3);
       исключение;
    конецПопытки;
    стр="{"""+Вид+""",""0"",""0"","""+тип+""",""0"",""0"","""+Код+"""}";
    Возврат ЗначениеИзСтрокиВнутр(стр);
КонецФункции
////////////////////////////////////////////////////////////

Процедура ПолученноеВСтроку(ф_тз)  	// выводим данные из лога в строку;
	ВсегоДокументов 	= Метаданные.Документ();
	ВсегоСправочников 	= Метаданные.Справочник();
	ф_тз.ВыбратьСтроки();						// перебираем таблицу значений с полученными элементами;
	РезультатЗапросаДок = "";
	Пока 	ф_тз.ПолучитьСтроку() = 1 Цикл
		Счетчик = Счетчик + 1;
		Если  ТипЗначения(ф_тз.Объект) = 12 Тогда // если документы
			РезультатЗапросаДок = РезультатЗапросаДок + "$;Элемент $$ Документ $ Статус$$ "  + ф_тз.Статус +  "$ ID $$ " + ЗначениеВСтроку(ОбъектПоСтроке(Ф_ТЗ.ИД)) + " $$$Шапка: $; ";	
			НомДок = 0;
			// вычисляем номер документа в метаданных
			Сч = 0;
			Пока Сч < ВсегоДокументов Цикл
				Сч = Сч+1;
				Если СокрЛП(ф_тз.Объект.Вид()) =  Метаданные.Документ(Сч).Идентификатор Тогда
					Документ = 	Метаданные.Документ(Сч).Идентификатор;
					НомДок = Сч;
					Прервать;
				КонецЕсли;
			КонецЦикла;
				
			ТЗРеквизитов = СоздатьОбъект("ТаблицаЗначений"); // зоздаем таблицу значений реквизита
			ТЗРеквизитов.ВставитьКолонку("Реквизиты");
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизиты = "НомерДок";
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизиты = "ДатаДок";
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизиты = "НомерСтроки";
			Сч = 0;
			Пока Сч < метаданные.Документ(НомДок).РеквизитШапки() Цикл // забиваем реквизиты шапки
				Сч = Сч + 1;
				НовРеквизит = метаданные.Документ(НомДок).РеквизитШапки(Сч).Идентификатор;
				ТЗРеквизитов.НоваяСтрока();
				ТЗРеквизитов.Реквизиты = НовРеквизит;	
			КонецЦикла;
			
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизиты = "Таблица";
			Сч = 0;
			Пока Сч < метаданные.Документ(НомДок).РеквизитТабличнойЧасти() Цикл // забиваем реквизиты Таблицы
				Сч = Сч + 1;
				НовРеквизитТабл = метаданные.Документ(НомДок).РеквизитТабличнойЧасти(Сч).Идентификатор;
				ТЗРеквизитов.НоваяСтрока();
				ТЗРеквизитов.Реквизиты = НовРеквизитТабл;
				
			КонецЦикла;		
		  // Быбираем Шапку:
			ТЗРеквизитов.ВыбратьСтроки();
			Счетчик = 0;
			Пока 	ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
				Счетчик = Счетчик + 1;	
				Если ТЗРеквизитов.Реквизиты = "Таблица" Тогда
					РезультатЗапросаДок = РезультатЗапросаДок + "#| $$$ТаблЧасть: ";
					Прервать;
				КонецЕсли;
				ВидРеквизита = ТЗРеквизитов.Реквизиты;
				Если ВидРеквизита = ф_тз.Объект.Вид() Тогда 
					ВидРеквизита = "Документ"; 
				//	РезультатЗапросаДок = РезультатЗапросаДок + 
				КонецЕсли;
				РезультатЗапросаДок = РезультатЗапросаДок + " $; " + ВидРеквизита + " $$ " + СокрЛП(ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты)) ;
				Если ТипЗначения(ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты))  = 11 Тогда
					Попытка
					РезультатЗапросаДок = РезультатЗапросаДок + " $; " + СокрЛП(ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты).Код);
				Исключение
					РезультатЗапросаДок = РезультатЗапросаДок + " $; ";
				КонецПопытки;
				КонецЕсли
			КонецЦикла;	
			// выбираем табличную часть:
			Док = ф_тз.Объект;
			Док.ВыбратьСтроки();
			Пока Док.ПолучитьСтроку() = 1 Цикл
				Сч = 0;
				ТЗРеквизитов.ВыбратьСтроки();
				Счетчик = 0;
				Пока 	ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
					Счетчик = Счетчик + 1;	
					Если ТЗРеквизитов.Реквизиты = "Таблица" Тогда
						Сч = 1;
					КонецЕсли;
					
					Если (Сч = 1) И (ТЗРеквизитов.Реквизиты <> "Таблица") Тогда
						
						РезультатЗапросаДок = РезультатЗапросаДок + " $; " + ТЗРеквизитов.Реквизиты + " $$ "+ СокрЛП(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты)) ;
						Если ТипЗначения(Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты))  = 11 Тогда
					Попытка
						РезультатЗапросаДок = РезультатЗапросаДок + " $;" + Док.ПолучитьАтрибут(ТЗРеквизитов.Реквизиты).Код;
					Исключение
						РезультатЗапросаДок = РезультатЗапросаДок + " $;"
					КонецПопытки;
						КонецЕсли
					КонецЕсли;
				КонецЦикла;		
			КонецЦикла;	
		РезультатЗапросаДок 		= РезультатЗапросаДок +  " #| " ; // добавляем разделитель строки
		// закончили выборки документов
			
		ИначеЕсли (ТипЗначения(ф_тз.Объект) = 11) Тогда  // Если Справочники
			Сч = 0;
			Пока Сч < ВсегоСправочников Цикл  // находим номер справочника в конфигураторе
				Сч = Сч+1;
				Если СокрЛП(ф_тз.Объект.Вид()) =  Метаданные.Справочник(Сч).Идентификатор Тогда
					НомСправ = Сч;
					Прервать;
				КонецЕсли;
			КонецЦикла;		
				
		Попытка
			колвоРеквизитов 			= метаданные.Справочник(НомСправ).Реквизит();  // получаем количество реквизитов
		Исключение
			колвоРеквизитов 			= 0;
		КонецПопытки;
		Справочник 					= Метаданные.Справочник(НомСправ).Идентификатор;
		ПеременнаяЗапроса 			= "";
		ТЗРеквизитов 				= СоздатьОбъект("ТаблицаЗначений");
		ТЗРеквизитов.ВставитьКолонку("Реквизит");
		ТЗРеквизитов.ВставитьКолонку("НомерРеквизита");
		ТЗРеквизитов.НоваяСтрока();
		ТЗРеквизитов.Реквизит 		= "Код";
		// Если есть группы Тогда включаем группы в запрос
		НомерРеквизита 				= 3;
		Если Метаданные.Справочник(НомСправ).КоличествоУровней >1 Тогда
			НомерРеквизита 			= НомерРеквизита + 1;
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизит 	= "Родитель";
			
		КонецЕсли;
		
		// создаем список реквизитов справочника  глубина
	   	Сч = 0;
		Пока (Сч < колвоРеквизитов) Цикл
			Сч = Сч+1;
			РеквизитыСправочника 		= Метаданные.Справочник(НомСправ).Реквизит(Сч).Идентификатор;
			ТЗРеквизитов.НоваяСтрока();
			ТЗРеквизитов.Реквизит 		= РеквизитыСправочника;
			ТЗРеквизитов.НомерРеквизита = НомерРеквизита;
		КонецЦикла;

		ТЗРеквизитов.ВыбратьСтроки();
			Счетчик = 0;
			Если Ф_ТЗ.Объект.ПометкаУдаления() = 1 Тогда
				Статус = "Удален $";
			Иначе
				Статус = "записан $";
			КонецЕсли;
			РезультатЗапросаДок = РезультатЗапросаДок + "$; Элемент $$ Справочник $; Статус$$ " + Статус + " $; ID $$ " + ЗначениеВСтроку(ОбъектПоСтроке(Ф_ТЗ.ИД));
				
			сч1 = 0;
			Пока 	ТЗРеквизитов.ПолучитьСтроку() = 1 Цикл
			сч1 = Сч1+1;	
				// Если есть иерархия.
				
				Если (ф_тз.Объект.ЭтоГруппа() = 1) и (Сч1 = 1) Тогда
					РезультатЗапросаДок = РезультатЗапросаДок + " $; Folder$$ True ";// указавыем, что это папка	
				Иначе 
					РезультатЗапросаДок = РезультатЗапросаДок + " $; Folder$$ False ";// указавыем, что это Не папка	
				КонецЕсли;
							
				Счетчик = Счетчик + 1;
				РезультатЗапросаДок 	= РезультатЗапросаДок + " $; " + ТЗРеквизитов.Реквизит + " $$ " +	СокрЛП(ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) + " $; ";
				Если (ТипЗначения(ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит)) = 11) И (ТЗРеквизитов.Реквизит <> "Родитель") Тогда
					Попытка
					РезультатЗапросаДок 	= РезультатЗапросаДок + " $;" + ф_тз.Объект.ПолучитьАтрибут(ТЗРеквизитов.Реквизит).Код + " $; ";
				Исключение
					РезультатЗапросаДок 	= РезультатЗапросаДок + " $;" + " $; ";
				КонецПопытки;
				КонецЕсли;
						
				//Если 
			КонецЦикла;	
			
			РезультатЗапросаДок 		= РезультатЗапросаДок +  " #| " ; // добавляем разделитель строки
		
		КонецЕсли;
	КонецЦикла;	
		СпискиСправочников = РезультатЗапросаДок;
	КонецПроцедуры

////////////////////////////////////////////////////////////
Процедура ИзмененияДокументов(ДатаНач, ДатаКон) // в процессе построения
    Ф_тз = СоздатьОбъект("ТаблицаЗначений");
    ф_тз.Очистить();
    ф_тз.НоваяКолонка("Дата","Дата");
    ф_тз.НоваяКолонка("Время","Строка",8);
    ф_тз.НоваяКолонка("Пользователь","Строка");
    ф_тз.НоваяКолонка("Где","Строка",1);
    ф_тз.НоваяКолонка("Действие","Строка",8);
    ф_тз.НоваяКолонка("Событие","Строка",20);
    ф_тз.НоваяКолонка("ДопКод","Число",5);
    ф_тз.НоваяКолонка("Описание","Строка");
    ф_тз.НоваяКолонка("ИД","Строка");
    ф_тз.НоваяКолонка("Представление","Строка");
    ф_тз.НоваяКолонка("Объект");
    ф_тз.НоваяКолонка("Статус");
     
    Если ПустоеЗначение(ДатаНач)=1 Тогда
        СписокСправочников = "Укажите начальную дату.";
        Возврат;
    КонецЕсли;
    Если ПустоеЗначение(ДатаКон)=1 Тогда
        СписокСправочников = "Укажите конечную дату.";
        Возврат;
    КонецЕсли;
    сч=0;
    
        fso=СоздатьОбъект("Scripting.FileSystemObject");
        
        ИмяФайла=КаталогИБ()+"SYSLOG\1cv7.mlg";

        file=fso.OpenTextFile(ИмяФайла, 1, 0, 0); //Открываем файл в режиме "только чтение"           
        
        стрНачДата= ""+ДатаГод(ДатаНач)+вед0(ДатаМесяц(ДатаНач))+ вед0(ДатаЧисло(ДатаНач));
        стрКонДата= ""+ДатаГод(ДатаКон)+вед0(ДатаМесяц(ДатаКон))+ вед0(ДатаЧисло(ДатаКон));

       Пока file.AtEndOfStream=0 Цикл  //Читаем следующую строку файла
            сч=сч+1;
            стр=file.ReadLine(); 
            
            стрДата1=Лев(стр,17);
            стрДата=Лев(стр,8);
            
            Если сч%10=0 Тогда
                Состояние(стрДата1);
            КонецЕсли;

        //Пропускаем события вне указанного диапазона
            
            Если стрДата<стрНачДата Тогда
                Продолжить;
            КонецЕсли;
            Если стрДата>стрКонДата Тогда
                Продолжить;
            КонецЕсли;
            стр=СтрЗаменить(стр,";",""",""");
            стр=""""+стр+"""";
            сп=СоздатьОбъект("СписокЗначений");
            сп.ИзСтрокиСРазделителями(стр);
                       пСобытие                =СокрЛП(сп.ПолучитьЗначение(6));
                       Если (пСобытие = "DocWriteNew") или (пСобытие = "DocPassed") ИЛИ (пСобытие = "DocWriteAndRepassed") 
                       ИЛИ (пСобытие = "DocMarkDel") ИЛИ (пСобытие = "RefWrite")  Тогда
                       Иначе продолжить;
                               
                       КонецЕсли;
                       
            пДата                =СтрокаВДату(сп.ПолучитьЗначение(1));
            пВремя               =сп.ПолучитьЗначение(2);
            пПользователь        =сп.ПолучитьЗначение(3);
            пГде                 =сп.ПолучитьЗначение(4);
            пДействие            =сп.ПолучитьЗначение(5);
            пДопКод              =сп.ПолучитьЗначение(7);
            пОписание            =сп.ПолучитьЗначение(8);
            Если сп.РазмерСписка()>=9 Тогда
                Пид                        =сп.ПолучитьЗначение(9);
            КонецЕсли;
            Если сп.РазмерСписка()>=10 Тогда
                пПредставление=сп.ПолучитьЗначение(10);
            КонецЕсли;
                                     
                       Если (пСобытие = "DocPassed") ИЛИ (пСобытие = "DocWriteAndRepassed") ИЛИ (пСобытие = "DocWriteNew") Тогда
                               ПолученныйОбъект = ОбъектПоСтроке(пИД);
                               Если ПолученныйОбъект.Проведен() = 1 Тогда
                                       СтатусПроведения = "Passed";
                               Иначе
                                       СтатусПроведения = "DontPassed"
                               КонецЕсли;
                               
                       КонецЕсли; 
            
            ф_тз.НоваяСтрока();
            ф_тз.Дата=пДата;
            ф_тз.Время=пВремя;
            ф_тз.Пользователь=пПользователь;
            ф_тз.Где=пГде;
            ф_тз.Действие=пДействие;
            ф_тз.Событие=пСобытие;
            ф_тз.ДопКод=пДопКод;
            ф_тз.Описание=пОписание;
            ф_тз.ИД=пИД;
            ф_тз.Представление=пПредставление;
            ф_тз.Объект=ОбъектПоСтроке(пИД);
            Ф_Тз.Статус = СтатусПроведения;
                            
        КонецЦикла;
       //Ф_тз.ВыбратьСтроку();
       ПолученноеВСтроку(ф_тз);
        
КонецПроцедуры
//=================================
Функция ExportEnterprise (param1,param2, param3, param4, param5, param6) Экспорт   
	СпискиСправочников="";
	Parametr2 = СокрЛП(Param2); // в Глоб модуле эту строку коментируем
	Если СокрЛП(param1)  		= "1" тогда
		СписокСправочников();	
	ИначеЕсли СокрЛП(param1) 	= "2" Тогда
    	ДанныеСправочников(Parametr2, param5, param6);	
	ИначеЕсли СокрЛП(param1) 	= "3" Тогда
		РасшифровкаСправочников(param2);
	ИначеЕсли СокрЛП(param1) = "4" Тогда
		СписокДокументов();
	ИначеЕсли СокрЛП(param1) = "5" тогда
		РасшифровкаДокументов(param2); 
	ИначеЕсли СокрЛП(param1) = "6" Тогда
		ДатаНач = Дата(СокрЛП(param3));
		ДатаКон = Дата(СокрЛП(param4));
     	ДанныеДокумента(param2, ДатаНач, ДатаКон);    
	ИначеЕсли СокрЛП(param1) = "7" Тогда
        ДатаНач = Дата(СокрЛП(Param3));
        ДатаКон = Дата(СокрЛП(Param4));
        ИзмененияДокументов(ДатаНач, ДатаКон);	
	КонецЕсли;
//	Результат = СпискиСправочников; // в гл модуле эту строку коментируем
	Возврат СпискиСправочников;	
	
КонецФункции               
//фин.модуль
// ===============================
